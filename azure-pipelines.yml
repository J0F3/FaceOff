trigger: 
  branches:
   include:
     - master

pool:
  name: Hosted Ubuntu 1604

variables:
    azureSubscriptionEndpoint: CDAYS19
    CONTAINER_REGISTRY_ADDRESS: 'cdays19faceoff.azurecr.io'
    CONTAINER_REGISTRY_USERNAME: 'CDAYS19FaceOff'
    azureContainerRegistry: '{"loginServer":"cdays19faceoff.azurecr.io", "id" : "/subscriptions/831777f5-dce8-4a3e-b6ce-9d405702390a/resourceGroups/CDAYS19/providers/Microsoft.ContainerRegistry/registries/CDAYS19FaceOff"}'

steps:
- script: docker run --rm --privileged multiarch/qemu-user-static:register --reset

- task: AzureIoTEdge@2
  displayName: 'Azure IoT Edge - Build module images'
  name: 'build_images'
  inputs:
    defaultPlatform: arm32v7

- task: AzureIoTEdge@2
  displayName: 'Azure IoT Edge - Push module images'
  name: 'publish_images'
  inputs:
    action: 'Push module images'
    azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
    azureContainerRegistry: $(azureContainerRegistry)
    defaultPlatform: arm32v7

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  inputs:
    PathtoPublish: '$[build_images.DEPLOYMENT_FILE_PATH]'